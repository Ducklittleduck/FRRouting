name: "CodeQL Advanced"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '29 12 * * 4'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: c-cpp
          build-mode: autobuild
        - language: javascript-typescript
          build-mode: none
        - language: python
          build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies and libyang from source
      run: |
        # Update and install basic dependencies
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          pkg-config \
          cmake \
          git \
          libssl-dev \
          libpcre3-dev \
          libxml2-dev \
          libcjson-dev \
          libboost-all-dev \
          libprotobuf-dev \
          libcurl4-openssl-dev \
          libsodium-dev \
          libgnutls28-dev \
          libyaml-dev \
          libkrb5-dev \
          libsqlite3-dev \
          zlib1g-dev

        # Clone the latest libyang repository from GitHub
        git clone --single-branch --recurse-submodules https://github.com/CESNET/libyang.git /tmp/libyang
        cd /tmp/libyang

        # Checkout the latest stable release (or master for latest development)
        git checkout $(git describe --tags $(git rev-list --tags --max-count=1))

        # Create a build directory and build libyang
        mkdir build
        cd build

        # Ensure to enable necessary features during CMake configuration
        cmake -DENABLE_XPATH=ON -DCMAKE_BUILD_TYPE=Release ..

        # Build and install libyang
        sudo make
        sudo make install

        # Set up libyang library path (if needed)
        echo "/usr/local/lib" | sudo tee -a /etc/ld.so.conf.d/libyang.conf
        sudo ldconfig

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
